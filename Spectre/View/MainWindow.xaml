<dx:ThemedWindow
    x:Class="Spectre.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:vms="clr-namespace:Spectre.ViewModel"
    xmlns:vws="clr-namespace:Spectre.View"
    x:Name="mMainWindow"
    Title="Spectre"
    Icon="/Resources/spectre.png"
    RenderOptions.BitmapScalingMode="HighQuality"
    ShowIcon="False"
    ShowTitle="False"
    TitleAlignment="Center"
    WindowKind="Tabbed"
    WindowState="Maximized">
    <dx:ThemedWindow.Resources>
        <Style x:Key="CustomFlyoutControlStyle" TargetType="{x:Type dxe:FlyoutControl}">

            <Setter Property="Settings">
                <Setter.Value>
                    <dxe:FlyoutSettings IndicatorHorizontalAlignment="Center" ShowIndicator="True" />
                </Setter.Value>
            </Setter>
        </Style>
    </dx:ThemedWindow.Resources>

    <dx:ThemedWindow.HeaderItems>

        <StackPanel Orientation="Horizontal">

            <dx:SimpleButton
                x:Name="optionsToggle"
                Click="optionsToggle_Click"
                Content="Options" />

            <dx:SimpleButton
                Command="{Binding LogoutCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type dx:ThemedWindow}}}"
                Content="Logout" />
        </StackPanel>
    </dx:ThemedWindow.HeaderItems>
    <Grid>

        <dxe:FlyoutControl
            Name="optionsFlyout"
            PlacementTarget="{Binding ElementName=optionsToggle}"
            Style="{StaticResource CustomFlyoutControlStyle}">
            <vws:FlyoutContent />
        </dxe:FlyoutControl>

        <dx:DXTabControl
            Padding="0"
            IsSynchronizedWithCurrentItem="True"
            ItemsSource="{Binding Tabs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            SelectedItem="{Binding SelectedTab, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            TabContentCacheMode="CacheTabsOnSelecting">
            <dx:DXTabControl.ControlBoxLeftTemplate>
                <DataTemplate>
                    <StackPanel
                        Margin="0,0,10,0"
                        VerticalAlignment="Center"
                        Orientation="Horizontal">
                        <dx:DXImage
                            Width="25"
                            Height="25"
                            Margin="0,0,5,0"
                            RenderOptions.BitmapScalingMode="HighQuality"
                            Source="/Resources/spectre.png" />
                        <TextBlock
                            VerticalAlignment="Center"
                            FontSize="16"
                            Text="Spectre" />
                    </StackPanel>
                </DataTemplate>
            </dx:DXTabControl.ControlBoxLeftTemplate>
            <dx:DXTabControl.Resources>
                <DataTemplate DataType="{x:Type vms:SaleViewModel}">
                    <vws:Sale />
                </DataTemplate>
                <DataTemplate DataType="{x:Type vms:PurchaseViewModel}">
                    <vws:Purchase />
                </DataTemplate>
                <DataTemplate DataType="{x:Type vms:ExpanseViewModel}">
                    <vws:Expanse />
                </DataTemplate>
                <DataTemplate DataType="{x:Type vms:HomeViewModel}">
                    <vws:Home />
                </DataTemplate>
                <DataTemplate DataType="{x:Type vms:DashboardViewModel}">
                    <vws:Dashboard />
                </DataTemplate>
                <DataTemplate DataType="{x:Type vms:ReportViewModel}">
                    <vws:Reports />
                </DataTemplate>
                <DataTemplate DataType="{x:Type vms:UserViewModel}">
                    <vws:UserManagement />
                </DataTemplate>
                <DataTemplate x:Key="normal">
                    <ContentControl Content="{Binding Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </DataTemplate>
                <DataTemplate x:Key="homePage">
                    <vws:MainNavigationPage />
                </DataTemplate>
            </dx:DXTabControl.Resources>
            <dx:DXTabControl.ItemContainerStyle>
                <Style TargetType="dx:DXTabItem">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="FontSize" Value="16" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="FontSize" Value="16" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="">
                            <Setter Property="ContentTemplate" Value="{StaticResource homePage}" />
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Header" Value="{Binding Header}" />
                    <Setter Property="Width" Value="130" />
                    <Setter Property="BackgroundColor" Value="Transparent" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="ContentTemplate" Value="{StaticResource normal}" />
                </Style>
            </dx:DXTabControl.ItemContainerStyle>
            <dx:DXTabControl.BackgroundTemplate>
                <DataTemplate>
                    <Border Background="Transparent" />
                </DataTemplate>
            </dx:DXTabControl.BackgroundTemplate>

            <dx:DXTabControl.View>
                <dx:TabControlScrollView
                    dx:DragManager.IsDragging="True"
                    dx:ThemedWindowHeaderItemsControlBase.AllowHeaderItems="True"
                    AllowAnimation="True"
                    AllowKeyboardNavigation="True"
                    CloseHeaderMenuOnItemSelecting="True"
                    HideButtonShowMode="InActiveTab"
                    NewButtonShowMode="InTabPanel"
                    NewTabCommand="{Binding NewTabCommand}"
                    RemoveTabItemsOnHiding="True"
                    ScrollButtonShowMode="AutoHideBothButtons"
                    ScrollViewer.PanningMode="HorizontalOnly"
                    SingleTabItemHideMode="Disable" />
            </dx:DXTabControl.View>
        </dx:DXTabControl>
    </Grid>
</dx:ThemedWindow>